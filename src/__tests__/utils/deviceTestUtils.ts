// src/__tests__/utils/deviceTestUtils.ts
// モックファイル
jest.mock('expo-device', () => ({\n  isDevice: true,\n  brand: 'mock-brand',\n  manufacturer: 'mock-manufacturer',\n  modelName: 'mock-model',\n  deviceName: 'mock-device',\n  deviceYearClass: 2023,\n  totalMemory: 4096,\n  supportedCpuArchitectures: ['arm64'],\n  osName: 'Android',\n  osVersion: '12',\n  osBuildId: 'mock-build',\n  osInternalBuildId: 'mock-internal-build',\n  osBuildFingerprint: 'mock-fingerprint',\n  platformApiLevel: 31,\n  deviceType: 1, // PHONE\n}));\n\nexport const setupDevice = () => {\n  // デバイス関連の追加セットアップがあればここに実装\n};\n\n// mockDeviceShape function to simulate different device dimensions\nexport const mockDeviceShape = (deviceType: string | any) => {\n  // 実装詳細\n  return deviceType;\n};\n\n// resetDeviceMock function to restore original dimensions\nexport const resetDeviceMock = () => {\n  // 実装詳細\n};\n\n// mockLandscapeOrientation function to simulate landscape orientation\nexport const mockLandscapeOrientation = (deviceType: string) => {\n  // 実装詳細\n  return deviceType;\n};\n\n// Basic test case\ndescribe('Device Test Utils', () => {\n  it('should have device mocking functions', () => {\n    expect(typeof mockDeviceShape).toBe('function');\n    expect(typeof resetDeviceMock).toBe('function');\n    expect(typeof mockLandscapeOrientation).toBe('function');\n  });\n});