name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
    
    - name: Install dependencies
      run: |
        echo "Skipping lock file check"
        yarn config set ignore-engines true
        yarn config set checksumBehavior ignore
        # インテグリティチェックを回避して依存関係をインストール
        YARN_CHECKSUM_BEHAVIOR=ignore yarn install --legacy-peer-deps --network-timeout 300000
    
    - name: Clean Git state if needed
      run: |
        # Git設定を行う
        git config --global user.name "GitHub Action"
        git config --global user.email "action@github.com"
        
        # 変更がある場合はまずコミットする
        if [[ -n $(git status --porcelain) ]]; then
          echo "Changes detected, committing them first..."
          git add -A
          git commit -m "Auto-commit by GitHub Actions [skip ci]"
        else
          echo "Git working directory is clean."
        fi
        
        # リモートの変更を取得
        git fetch origin
        
        # 現在のブランチ名を取得
        CURRENT_BRANCH=${GITHUB_REF#refs/heads/}
        
        # リモートの変更を取り込む
        git pull --rebase origin $CURRENT_BRANCH || echo "No changes to pull or rebase failed"
        
        # Pull Requestではなく、直接pushの場合のみpushを実行
        if [[ "${{ github.event_name }}" != "pull_request" && -n $(git log origin/$CURRENT_BRANCH..$CURRENT_BRANCH) ]]; then
          echo "Pushing changes to origin..."
          git push origin $CURRENT_BRANCH
        else
          echo "No changes to push or Pull Request中のため変更はpushせず"
        fi
    
    - name: Run TypeScript check
      run: yarn tsc
      continue-on-error: true
    
    # - name: Run ESLint
    #   run: yarn lint
    
    - name: Run tests
      run: yarn test
