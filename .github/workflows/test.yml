name: Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
      
    - name: Install and apply patches
      run: |
        # patch-packageをインストール
        npm install --save-dev patch-package
        
        # パッチを適用
        if [ -d "patches" ] && [ -f "patches/jest-expo+50.0.0.patch" ]; then
          echo "✅ patch-packageを使用してパッチを適用します"
          npx patch-package
        else
          # 従来のスクリプトを実行
          chmod +x ./scripts/patch-jest-expo.sh
          ./scripts/patch-jest-expo.sh
        fi
        
    - name: Setup TerminalReporter
      run: |
        echo "🛠️ Setting up TerminalReporter..."
        # __tests__ディレクトリが存在しなければ作成
        mkdir -p __tests__
        
        # TerminalReporterの作成
        cat > __tests__/TerminalReporter.js << 'EOL'
        /**
         * Custom Terminal Reporter for Jest Tests
         * Used in GitHub Actions CI pipeline
         */
        class TerminalReporter {
          constructor(globalConfig, options) {
            this._globalConfig = globalConfig;
            this._options = options || {};
          }

          onRunComplete(contexts, results) {
            // Test run completed
            console.log('\nSummary of Test Results:');
            console.log(`Total Tests: ${results.numTotalTests}`);
            console.log(`Tests Passed: ${results.numPassedTests}`);
            console.log(`Tests Failed: ${results.numFailedTests}`);
            
            if (results.numFailedTests > 0) {
              console.log('\nFailed Tests:');
              results.testResults.forEach(testResult => {
                if (testResult.failureMessage) {
                  console.log(`- ${testResult.testFilePath}`);
                }
              });
            }
          }

          onRunStart() {
            console.log('Starting test suite...');
          }

          onTestResult(test, testResult) {
            if (testResult.failureMessage) {
              console.log(`\nTest failed: ${testResult.testFilePath}`);
            }
          }
        }

        module.exports = TerminalReporter;
        EOL
        
        # Metro用のTerminalReporterも確保
        mkdir -p node_modules/metro/src/lib
        cat > node_modules/metro/src/lib/TerminalReporter.js << 'EOL'
        /**
         * Copyright (c) Meta Platforms, Inc. and affiliates.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @flow strict-local
         * @format
         */

        'use strict';

        /**
         * Metro Reporter for compatibility with Expo SDK 53.
         * This is a simplified implementation that provides required functionality.
         */
        class TerminalReporter {
          constructor(terminal) {
            this._terminal = terminal || {
              log: console.log.bind(console),
              error: console.error.bind(console),
              info: console.info.bind(console),
              warn: console.warn.bind(console)
            };
            this._errors = [];
            this._warnings = [];
          }

          handleError(error) {
            this._errors.push(error);
            if (this._terminal && this._terminal.error) {
              this._terminal.error(error);
            }
          }

          handleWarning(warning) {
            this._warnings.push(warning);
            if (this._terminal && this._terminal.warn) {
              this._terminal.warn(warning);
            }
          }

          getErrors() {
            return this._errors;
          }

          getWarnings() {
            return this._warnings;
          }

          update() {}
          
          terminal() { 
            return this._terminal; 
          }
        }

        module.exports = TerminalReporter;
        EOL
        
        echo "✅ TerminalReporter setup complete"
      
    - name: Run tests
      run: npm run test:fix-uuid
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: test-results/
      if: always()
