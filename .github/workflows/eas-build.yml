name: EAS Build

on:
  push:
    branches: [main, develop]
  workflow_dispatch:

jobs:
  build:
    name: Build App
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: 🏗 Setup repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # 完全な履歴を取得

      - name: 🏗 Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'yarn'

      - name: 📦 Install dependencies
        run: |
          # Clear cache and install dependencies
          echo "Removing .yarn/cache to ensure clean installation"
          rm -rf .yarn/cache node_modules/.cache node_modules/.yarn-integrity
          
          # Set longer timeout for yarn
          yarn config set network-timeout 300000
          
          # Install dependencies with force flag
          yarn install --force
          
          # Install JSONLint for validation
          yarn add -D jsonlint-cli

      - name: 🗑️ Remove app.config.ts
        run: rm -f app.config.ts

      - name: 🔧 Fix configuration files format
        run: |
          # 設定ファイルのフォーマットを確認・修正
          echo "Ensuring configuration files are properly formatted..."
          
          # app.config.js
          cat > app.config.js << 'EOL'
          /**
           * Ultra simple Expo app configuration
           */
          module.exports = ({ config }) => { return config; };
          EOL
          
          # app.json の検証
          npx jsonlint-cli app.json || {
            echo "Fixing app.json format issues..."
            node -e "const fs=require('fs');const content=fs.readFileSync('app.json','utf8');fs.writeFileSync('app.json',JSON.stringify(JSON.parse(content),null,2));"
          }
          
          # eas.json の検証
          npx jsonlint-cli eas.json || {
            echo "Fixing eas.json format issues..."
            node -e "const fs=require('fs');const content=fs.readFileSync('eas.json','utf8');fs.writeFileSync('eas.json',JSON.stringify(JSON.parse(content),null,2));"
          }

      - name: 🛠️ Fix Metro dependencies
        run: |
          # Apply Metro fixes for compatibility with Expo
          echo "Fixing Metro dependencies..."
          yarn fix-metro
          
          # Ensure Metro configuration is correct for CI
          echo "Verifying Metro configuration..."
          NODE_ENV=production node -e "console.log(require('./metro.config.js'))"

      # 自動コミットとプッシュを行わない（環境によるビルド問題防止のため）
      - name: 🧹 Verify Clean Git state
        run: |
          # 変更ファイルの確認のみ
          if [[ -n $(git status --porcelain) ]]; then
            echo "Changes detected in working directory. These are expected during CI."
            git status
          else
            echo "Git working directory is clean."
          fi

      - name: 🏗 Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: 📝 Configure EAS Project
        run: |
          # プロジェクトの状態を確認
          echo "Checking EAS project configuration..."
          npx eas-cli whoami
          
          # 必要に応じてプロジェクトを登録/更新
          npx eas-cli project:info || (
            echo "Project not found or not properly linked. Creating/linking project..."
            npx eas-cli init --id beb25e0f-344b-4f2f-8b64-20614b9744a3 --non-interactive || true
          )

      - name: 🚀 Build App (Android)
        run: |
          # キャッシュをクリア
          rm -rf node_modules/.cache
          rm -rf $HOME/.expo/cache
          
          # 直接パッチ適用版のエクスポートを実行
          node export-direct-patch.js --platform android --dev false
          
          # EASビルド実行
          npx eas-cli build --platform android --profile ci --non-interactive

      # iOS is disabled until we fix the issues with iOS build
      # - name: 🚀 Build App (iOS)
      #   run: npx eas-cli build --platform ios --profile ci --non-interactive
