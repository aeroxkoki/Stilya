name: Expo EAS Build

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'
      
      - name: Install dependencies
        run: |
          # Use yarn to install all dependencies  
          yarn install --force
          
          # Explicitly install critical packages
          npm install --save @babel/runtime@^7.24.0
      
      - name: Run tests
        run: yarn test:ci
  
  build:
    name: EAS Build
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'
      
      - name: Install dependencies
        run: |
          # Use yarn to install all dependencies
          yarn install --force
          
          # Explicitly install critical packages as runtime dependencies
          npm install --save @babel/runtime@^7.24.0
          
          # Check all babel packages
          ls -la node_modules/@babel
          
          # Validate runtime dependencies
          node -e "try { require('@babel/runtime/helpers/interopRequireDefault'); console.log('✅ @babel/runtime is properly installed'); } catch (e) { console.error('❌ Error:', e.message); process.exit(1); }"
      
      - name: Install EAS CLI
        run: npm install -g eas-cli@latest
        
      - name: Fix dependencies for EAS build
        run: |
          # Run fix-babel script
          yarn fix-babel
          
          # Clean caches
          yarn clean
      
      - name: Login to Expo
        run: |
          echo "${{ secrets.EXPO_TOKEN }}" | npx eas-cli login --non-interactive
      
      - name: Validate configuration files
        run: |
          yarn eas:validate
      
      - name: Run EAS Build
        env:
          CI: "true"
          EAS_NO_METRO: "true"
          EXPO_NO_CACHE: "true" 
          EXPO_NO_BUNDLER: "1"
          EAS_SKIP_JAVASCRIPT_BUNDLING: "1"
        run: |
          # Bypass the export:embed command by using direct build command  
          npx eas-cli build --platform android --non-interactive --profile production --no-wait
      
      - name: Build information
        if: always()
        run: |
          echo "Build completed"
          echo "Expo version: $(npx expo --version)"
          echo "EAS CLI version: $(npx eas-cli --version)"
          echo "Node version: $(node --version)"
