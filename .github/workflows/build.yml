name: Build Stilya App

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
      EAS_SKIP_JAVASCRIPT_BUNDLING: 1
      NODE_OPTIONS: --max-old-space-size=8192
      NODE_ENV: production
      BUILD_TYPE: local
      ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
      ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
      ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
      ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Clean lock files
        run: |
          rm -f yarn.lock
          echo "✅ Removed duplicate lock files"

      - name: Install dependencies
        run: |
          npm ci
          npm install -g eas-cli@latest expo-cli@latest

      - name: Fix dependencies
        run: |
          chmod +x ./fix-dependencies.sh
          ./fix-dependencies.sh
          chmod +x ./fix-metro-config.js
          node fix-metro-config.js
          echo "✅ Dependencies fixed"

      - name: Clear cache
        run: |
          rm -rf node_modules/.cache
          rm -rf ~/.expo/cache
          rm -rf ~/.metro-cache
          rm -rf .expo
          rm -rf .expo-shared
          echo "✅ Caches cleared"

      - name: Verify Metro compatibility
        run: |
          if [ -f "node_modules/metro/src/lib/TerminalReporter.js" ]; then
            echo "✅ TerminalReporter.js exists"
          else
            echo "❌ TerminalReporter.js not found"
            exit 1
          fi

      - name: Setup Expo
        run: |
          npx expo-doctor
          npx expo install --check

      - name: Prepare keystore
        if: env.ANDROID_KEYSTORE_BASE64 != ''
        run: |
          mkdir -p android/app
          echo ${{ secrets.ANDROID_KEYSTORE_BASE64 }} | base64 --decode > android/app/stilya-keystore.jks
          echo '{"android":{"keystore":{"keystorePath":"android/app/stilya-keystore.jks","keystorePassword":"${{ secrets.ANDROID_KEYSTORE_PASSWORD }}","keyAlias":"${{ secrets.ANDROID_KEY_ALIAS }}","keyPassword":"${{ secrets.ANDROID_KEY_PASSWORD }}"}}}' > credentials.json
          echo "✅ Keystore prepared"

      - name: Build Android App
        run: |
          echo "🏗️ local ビルドを実行します..."
          
          if [ "local" == "eas" ]; then
            # EAS ビルド
            echo "🌐 EAS ビルドを実行します..."
            eas build --platform android --profile ci --non-interactive --no-wait
            echo "✅ ビルドジョブが EAS に送信されました"
          else
            # ローカルビルド
            echo "💻 ローカルビルドを実行します..."
            chmod +x ./scripts/local-android-build.sh
            ./scripts/local-android-build.sh
            
            # ビルド結果の確認
            if [ -f "stilya-release.apk" ]; then
              echo "✅ ローカルビルドが成功しました"
              ls -la stilya-release.apk
            else
              echo "❌ ローカルビルドが失敗しました"
              exit 1
            fi
          fi

      - name: Upload APK
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: stilya-app
          path: stilya-release.apk
