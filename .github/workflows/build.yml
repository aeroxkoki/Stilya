name: Build Stilya App

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    env:
      EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
      EAS_SKIP_JAVASCRIPT_BUNDLING: 1
      NODE_OPTIONS: --max-old-space-size=8192
      NODE_ENV: production
      EXPO_NO_CACHE: 1
      # キーストア設定
      ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
      ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
      ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
      ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'

      - name: Clean caches
        run: |
          rm -rf node_modules/.cache
          rm -rf ~/.expo/cache
          rm -rf ~/.metro-cache
          echo "✅ Caches cleaned"

      - name: Install dependencies
        run: |
          npm ci
          npm install -g eas-cli@7.3.0
          echo "✅ Dependencies installed"

      - name: Apply Metro fixes
        run: |
          chmod +x ./scripts/fix-metro-for-ci.sh
          ./scripts/fix-metro-for-ci.sh
          echo "✅ Metro fixes applied"

      - name: Prepare keystore
        if: env.ANDROID_KEYSTORE_BASE64 != ''
        run: |
          mkdir -p android/app
          echo ${{ secrets.ANDROID_KEYSTORE_BASE64 }} | base64 --decode > android/app/stilya-keystore.jks
          echo '{'$'\n''  "android": {'$'\n''    "keystore": {'$'\n''      "keystorePath": "android/app/stilya-keystore.jks",'$'\n''      "keystorePassword": "${{ secrets.ANDROID_KEYSTORE_PASSWORD }}",'$'\n''      "keyAlias": "${{ secrets.ANDROID_KEY_ALIAS }}",'$'\n''      "keyPassword": "${{ secrets.ANDROID_KEY_PASSWORD }}"'$'\n''    }'$'\n''  }'$'\n''}'$'\n' > credentials.json
          echo "✅ Keystore prepared"

      - name: Create temporary keystore for build
        if: env.ANDROID_KEYSTORE_BASE64 == ''
        run: |
          mkdir -p android/app
          keytool -genkeypair -v -keystore android/app/debug.keystore -storepass android -alias androiddebugkey -keypass android -keyalg RSA -keysize 2048 -validity 10000 -dname "CN=Android Debug,O=Android,C=US"
          echo "✅ Debug keystore created"

      - name: Build Android App
        run: |
          echo "🏗️ Building Android app with fixed configuration..."
          
          # Expoプレビルド（JavaScriptバンドリングを明示的にスキップ）
          npx expo prebuild --platform android --clean
          
          # metro関連の問題を防ぐための追加の修正
          mkdir -p android/app/src/main/assets
          touch android/app/src/main/assets/index.android.bundle

          # Androidビルド
          cd android
          ./gradlew assembleRelease
          cd ..
          
          # ビルド結果を移動
          mkdir -p dist
          find android/app/build/outputs -name "*.apk" -type f -exec cp {} dist/stilya-release.apk \;
          
          if [ -f "dist/stilya-release.apk" ]; then
            echo "✅ Build successful"
            ls -la dist/stilya-release.apk
          else
            echo "❌ Build failed"
            exit 1
          fi

      - name: Upload APK
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: stilya-app
          path: dist/stilya-release.apk
          
      - name: Upload Build Logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: |
            build-logs/
            **/build/**/*.log
            android/app/build/outputs/logs/
            ~/.npm/_logs/
