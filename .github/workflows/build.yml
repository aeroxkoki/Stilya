name: Stilya CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    name: テスト実行
    runs-on: ubuntu-latest
    
    steps:
      - name: リポジトリをチェックアウト
        uses: actions/checkout@v4
      
      - name: Node.js セットアップ
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: npm キャッシュ
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      - name: 依存関係のインストール
        run: npm ci
      
      - name: Metro依存関係の修正
        run: |
          chmod +x ./scripts/fix-metro-dependencies.sh
          ./scripts/fix-metro-dependencies.sh
      
      - name: 基本テスト（必須）
        run: npm run test src/__tests__/basic.test.js src/__tests__/simple.test.js
      
      - name: 重要な機能テスト（必須）
        run: npm run test src/__tests__/auth/authStore.test.ts
        
      - name: その他のテスト（オプション）
        run: |
          echo "その他のテストを実行します（失敗しても続行します）"
          NODE_OPTIONS="--max-old-space-size=4096" npm run test -- --testPathIgnorePatterns="basic.test.js|simple.test.js|authStore.test.ts" || echo "一部のテストが失敗しましたが、開発を継続します"
  
  build:
    name: アプリビルド
    runs-on: ubuntu-latest
    needs: test
    # main/developブランチへのpushまたはワークフロー手動実行時のみビルド
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    
    env:
      EAS_SKIP_JAVASCRIPT_BUNDLING: "1"
    steps:
      - name: リポジトリをチェックアウト
        uses: actions/checkout@v4
      
      - name: Node.js セットアップ
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: npm キャッシュ
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      - name: 依存関係のインストール
        run: npm ci
      
      - name: キャッシュクリア
        run: |
          rm -rf node_modules/.cache
          rm -rf ~/.expo/cache
          rm -rf .expo
          rm -rf .expo-shared
      
      - name: Expo ログイン
        uses: expo/expo-github-action@v8
        with:
          eas-version: '7.8.5'
          token: ${{ secrets.EXPO_TOKEN }}
      
      - name: Metro依存関係の修正
        run: |
          chmod +x ./scripts/fix-metro-dependencies.sh
          ./scripts/fix-metro-dependencies.sh
      
      - name: EASプロジェクト初期化
        run: |
          # app.jsonからプロジェクトIDを取得
          PROJECT_ID=$(node -e "console.log(require('./app.json').expo.extra.eas.projectId || '')")
          echo "📋 ProjectID: $PROJECT_ID"
          
          # app.jsonからownerを取得
          OWNER=$(node -e "console.log(require('./app.json').expo.owner || '')")
          echo "👤 Owner: $OWNER"
          
          # EASプロジェクトを初期化（プロジェクトIDを指定）
          if [ -n "$PROJECT_ID" ]; then
            npx eas-cli project:init --id="$PROJECT_ID" --non-interactive || echo "プロジェクトはすでに存在します"
          else
            npx eas-cli project:init --non-interactive || echo "新規プロジェクト作成に失敗しました"
          fi
          
          # プロジェクト情報を表示
          npx eas-cli project:info || echo "プロジェクト情報を取得できません"
      
      - name: EASビルド環境確認
        run: |
          chmod +x ./scripts/eas-build-debug.sh
          ./scripts/eas-build-debug.sh
      
      - name: EAS ビルド実行
        run: npx eas-cli build --platform android --profile ci --non-interactive
        
      - name: ビルド完了通知
        if: success()
        run: echo "✅ ビルドが正常に完了しました。"
        
  update:
    name: OTAアップデート配信
    runs-on: ubuntu-latest
    needs: test
    # mainブランチへのプッシュまたはワークフロー手動実行時のみ実行
    if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: リポジトリをチェックアウト
        uses: actions/checkout@v4
      
      - name: Node.js セットアップ
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: 依存関係のインストール
        run: npm ci
      
      - name: Expo ログイン
        uses: expo/expo-github-action@v8
        with:
          eas-version: '7.8.5'
          token: ${{ secrets.EXPO_TOKEN }}
      
      - name: EAS Update 実行
        run: |
          # Android向けアップデート
          npx eas-cli update --platform android --message "$(git log -1 --pretty=%B)" --non-interactive
          
          # iOS向けアップデート（将来的に必要な場合）
          # npx eas-cli update --platform ios --message "$(git log -1 --pretty=%B)" --non-interactive
      
      - name: 更新完了通知
        if: success()
        run: echo "✅ OTAアップデートが正常に配信されました。"
