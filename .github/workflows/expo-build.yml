name: Expo Build

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: üèó Setup repository
        uses: actions/checkout@v3

      - name: üèó Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: yarn

      - name: üì¶ Install dependencies
        run: |
          yarn config set ignore-engines true
          yarn config set checksumBehavior ignore
          # „Ç§„É≥„ÉÜ„Ç∞„É™„ÉÜ„Ç£„ÉÅ„Çß„ÉÉ„ÇØ„ÇíÂõûÈÅø„Åó„Å¶‰æùÂ≠òÈñ¢‰øÇ„Çí„Ç§„É≥„Çπ„Éà„Éº„É´
          YARN_CHECKSUM_BEHAVIOR=ignore yarn install --network-timeout 300000

      - name: üß™ TypeScript Check
        run: yarn tsc
        continue-on-error: true

      # - name: üß™ ESLint
      #   run: yarn lint
      #   continue-on-error: true

      - name: üß™ Jest Tests
        run: yarn test
        continue-on-error: true

      - name: üßπ Clean Git state if needed
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            echo "Cleaning Git working directory..."
            git config --global user.name "GitHub Action"
            git config --global user.email "action@github.com"
            git add -A
            git commit -m "Auto-commit by GitHub Actions [skip ci]"
            git status
          else
            echo "Git working directory is clean."
          fi

      - name: üèó Setup Expo and EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          expo-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: üõ† Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: üì± Build Preview
        run: |
          echo "Building app preview for branch ${{ github.ref_name }}"
          
          # EAS„Éó„É≠„Ç∏„Çß„ÇØ„Éà„ÅÆ‰ΩúÊàêÔºàÂ≠òÂú®„Åó„Å™„ÅÑÂ†¥ÂêàÔºâ
          echo "Creating or using existing EAS project..."
          eas project:create --non-interactive --name="Stilya" || true
          
          # „Éó„É≠„Ç∏„Çß„ÇØ„ÉàID„ÅÆÂèñÂæó„Å®Ë°®Á§∫
          PROJECT_ID=$(eas project:info --json | jq -r '.projectId')
          echo "Using EAS Project ID: $PROJECT_ID"
          
          # app.json„Å´„Éó„É≠„Ç∏„Çß„ÇØ„ÉàID„ÇíË®≠ÂÆö
          if [ -n "$PROJECT_ID" ]; then
            echo "Updating app.json with the project ID..."
            if [ -f "app.json" ]; then
              # jq„Çí‰ΩøÁî®„Åó„Å¶app.json„ÇíÊõ¥Êñ∞
              jq --arg projid "$PROJECT_ID" '.expo.extra.eas.projectId = $projid' app.json > app.json.tmp && mv app.json.tmp app.json
              
              # app.config.js„ÅÆupdates.url„ÇÇÊõ¥Êñ∞
              if [ -f "app.config.js" ]; then
                sed -i "s|EXPO_PROJECT_ID|$PROJECT_ID|g" app.config.js
              fi
              
              # app.config.ts„ÇÇÊõ¥Êñ∞
              if [ -f "app.config.ts" ]; then
                sed -i "s|EXPO_PROJECT_ID|$PROJECT_ID|g" app.config.ts
              fi
              
              echo "Configuration updated with project ID: $PROJECT_ID"
            else
              echo "app.json not found!"
            fi
          else
            echo "Could not retrieve project ID!"
          fi
          
          # CIÁî®„ÅÆ„Éó„É≠„Éï„Ç£„Éº„É´„Çí‰ΩøÁî®
          if [[ "${{ github.ref_name }}" == "main" ]]; then
            eas build --platform=android --profile=ci --non-interactive --no-wait
          else
            eas build --platform=android --profile=ci --non-interactive --no-wait
          fi
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
