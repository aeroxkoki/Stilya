#!/usr/bin/env node

/**
 * SupabaseÊé•Á∂ö„Å®„ÇØ„Ç®„É™„ÅÆÂïèÈ°å„ÇíË©≥Á¥∞„Å´Ë™øÊüª
 */

require('dotenv').config();
const { createClient } = require('@supabase/supabase-js');

const supabaseUrl = process.env.EXPO_PUBLIC_SUPABASE_URL;
const supabaseAnonKey = process.env.EXPO_PUBLIC_SUPABASE_ANON_KEY;

if (!supabaseUrl || !supabaseAnonKey) {
  console.error('‚ùå Áí∞Â¢ÉÂ§âÊï∞„ÅåË®≠ÂÆö„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseAnonKey);

async function investigateSupabaseIssue() {
  console.log('üîç SupabaseÊé•Á∂ö„Å®„ÇØ„Ç®„É™„ÅÆË©≥Á¥∞Ë™øÊüª\n');
  
  // 1. Âü∫Êú¨ÁöÑ„Å™Êé•Á∂ö„ÉÜ„Çπ„Éà
  console.log('=== 1. Âü∫Êú¨Êé•Á∂ö„ÉÜ„Çπ„Éà ===');
  try {
    const { data, error } = await supabase
      .from('external_products')
      .select('id')
      .limit(1);
    
    if (error) {
      console.error('‚ùå Êé•Á∂ö„Ç®„É©„Éº:', error);
    } else {
      console.log('‚úÖ Êé•Á∂öÊàêÂäü');
    }
  } catch (e) {
    console.error('‚ùå ‰∫àÊúü„Åó„Å™„ÅÑ„Ç®„É©„Éº:', e);
  }
  
  // 2. „Ç´„Ç¶„É≥„ÉàÂèñÂæó„ÅÆÂêÑÁ®Æ„Éë„Çø„Éº„É≥„Çí„ÉÜ„Çπ„Éà
  console.log('\n=== 2. „Ç´„Ç¶„É≥„ÉàÂèñÂæó„ÉÜ„Çπ„Éà ===');
  
  // „Éë„Çø„Éº„É≥1: „Ç∑„É≥„Éó„É´„Å™„Ç´„Ç¶„É≥„Éà
  try {
    const { count, error } = await supabase
      .from('external_products')
      .select('*', { count: 'exact', head: true });
    
    console.log('„Éë„Çø„Éº„É≥1 (ÂÖ®‰ª∂„Ç´„Ç¶„É≥„Éà):', count, error ? `„Ç®„É©„Éº: ${error.message}` : '');
  } catch (e) {
    console.error('„Éë„Çø„Éº„É≥1 „Ç®„É©„Éº:', e.message);
  }
  
  // „Éë„Çø„Éº„É≥2: „Éï„Ç£„É´„Çø„Éº‰ªò„Åç„Ç´„Ç¶„É≥„Éà
  try {
    const { count, error } = await supabase
      .from('external_products')
      .select('*', { count: 'exact', head: true })
      .eq('is_active', true);
    
    console.log('„Éë„Çø„Éº„É≥2 (is_active=true):', count, error ? `„Ç®„É©„Éº: ${error.message}` : '');
  } catch (e) {
    console.error('„Éë„Çø„Éº„É≥2 „Ç®„É©„Éº:', e.message);
  }
  
  // „Éë„Çø„Éº„É≥3: Ë§áÊï∞„Éï„Ç£„É´„Çø„Éº
  try {
    const { count, error } = await supabase
      .from('external_products')
      .select('*', { count: 'exact', head: true })
      .eq('is_active', true)
      .eq('is_used', false);
    
    console.log('„Éë„Çø„Éº„É≥3 (is_active=true, is_used=false):', count, error ? `„Ç®„É©„Éº: ${error.message}` : '');
  } catch (e) {
    console.error('„Éë„Çø„Éº„É≥3 „Ç®„É©„Éº:', e.message);
  }
  
  // 3. „Éá„Éº„ÇøÂèñÂæó„ÅÆ„ÉÜ„Çπ„Éà
  console.log('\n=== 3. „Éá„Éº„ÇøÂèñÂæó„ÉÜ„Çπ„Éà ===');
  
  // ÈÄöÂ∏∏„ÅÆ„Éá„Éº„ÇøÂèñÂæó
  try {
    const { data, error } = await supabase
      .from('external_products')
      .select('*')
      .eq('is_active', true)
      .limit(20);
    
    console.log('ÈÄöÂ∏∏ÂèñÂæó:', data ? `${data.length}‰ª∂` : '„Å™„Åó', error ? `„Ç®„É©„Éº: ${error.message}` : '');
  } catch (e) {
    console.error('ÈÄöÂ∏∏ÂèñÂæó„Ç®„É©„Éº:', e.message);
  }
  
  // range‰ΩøÁî®
  try {
    const { data, error } = await supabase
      .from('external_products')
      .select('*')
      .eq('is_active', true)
      .range(0, 19);
    
    console.log('rangeÂèñÂæó:', data ? `${data.length}‰ª∂` : '„Å™„Åó', error ? `„Ç®„É©„Éº: ${error.message}` : '');
  } catch (e) {
    console.error('rangeÂèñÂæó„Ç®„É©„Éº:', e.message);
  }
  
  // 4. RLS„Å®„Ç¢„ÇØ„Çª„ÇπÊ®©Èôê„ÅÆÁ¢∫Ë™ç
  console.log('\n=== 4. RLSÔºàRow Level SecurityÔºâÁ¢∫Ë™ç ===');
  try {
    // RLS„ÅåÊúâÂäπ„Åã„Å©„ÅÜ„Åã„ÇíÁ¢∫Ë™ç„Åô„Çã„Åü„ÇÅ„Å´„ÄÅÁï∞„Å™„Çã„ÇØ„Ç®„É™„Éë„Çø„Éº„É≥„ÇíË©¶„Åô
    const queries = [
      { name: 'SELECTÊ®©Èôê', query: supabase.from('external_products').select('id').limit(1) },
      { name: 'COUNTÊ®©Èôê', query: supabase.from('external_products').select('id', { count: 'exact', head: true }) },
    ];
    
    for (const { name, query } of queries) {
      const result = await query;
      console.log(`${name}:`, result.error ? `‚ùå ${result.error.message}` : '‚úÖ OK');
    }
  } catch (e) {
    console.error('RLSÁ¢∫Ë™ç„Ç®„É©„Éº:', e);
  }
  
  // 5. Áí∞Â¢ÉÂ§âÊï∞„ÅÆÂÜÖÂÆπÁ¢∫Ë™çÔºà‰∏ÄÈÉ®„Éû„Çπ„ÇØÔºâ
  console.log('\n=== 5. Áí∞Â¢ÉÂ§âÊï∞Á¢∫Ë™ç ===');
  console.log('SUPABASE_URL:', supabaseUrl ? supabaseUrl.substring(0, 30) + '...' : 'Êú™Ë®≠ÂÆö');
  console.log('SUPABASE_ANON_KEY:', supabaseAnonKey ? supabaseAnonKey.substring(0, 20) + '...' : 'Êú™Ë®≠ÂÆö');
}

// ÂÆüË°å
investigateSupabaseIssue()
  .then(() => {
    console.log('\n‚úÖ Ë™øÊüªÂÆå‰∫Ü');
    process.exit(0);
  })
  .catch(error => {
    console.error('\n‚ùå „Ç®„É©„Éº:', error);
    process.exit(1);
  });
